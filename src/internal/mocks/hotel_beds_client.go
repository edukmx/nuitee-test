// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	request "github.com/edukmx/nuitee/internal/infra/client/request"
	response "github.com/edukmx/nuitee/internal/infra/client/response"
	mock "github.com/stretchr/testify/mock"
)

// HotelBedsClient is an autogenerated mock type for the HotelBedsClient type
type HotelBedsClient struct {
	mock.Mock
}

// CheckAvailability provides a mock function with given fields: reqObj
func (_m *HotelBedsClient) CheckAvailability(reqObj *request.CheckAvailabilityRequest) (*response.CheckAvailabilityResponse, error) {
	ret := _m.Called(reqObj)

	var r0 *response.CheckAvailabilityResponse
	if rf, ok := ret.Get(0).(func(*request.CheckAvailabilityRequest) *response.CheckAvailabilityResponse); ok {
		r0 = rf(reqObj)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*response.CheckAvailabilityResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*request.CheckAvailabilityRequest) error); ok {
		r1 = rf(reqObj)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewHotelBedsClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewHotelBedsClient creates a new instance of HotelBedsClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHotelBedsClient(t mockConstructorTestingTNewHotelBedsClient) *HotelBedsClient {
	mock := &HotelBedsClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
